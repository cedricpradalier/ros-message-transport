


<library path="lib/libstring_transport">
    
    <class name="string_transport/raw_pub_str" 
		type="message_transport::RawPublisher<std_msgs::String>" 
		base_class_type="message_transport::PublisherPlugin<std_msgs::String>">
    <description>
      This is the default publisher. It publishes the objects as-is on the base topic.
    </description>
  </class>

  <class name="string_transport/raw_sub_str" 
		type="message_transport::RawSubscriber<std_msgs::String>" 
		base_class_type="message_transport::SubscriberPlugin<std_msgs::String>">
    <description>
      This is the default pass-through subscriber for topics of type PointCloud
    </description>
  </class>

  <class name="string_transport/sharedmem_pub_str" 
		type="sharedmem_transport::SharedmemPublisher<std_msgs::String>" 
		base_class_type="message_transport::PublisherPlugin<std_msgs::String>">
    <description>
      This is the default publisher. It publishes the objects as-is on the base topic.
    </description>
  </class>

  <class name="string_transport/sharedmem_sub_str" 
		type="sharedmem_transport::SharedmemSubscriber<std_msgs::String>" 
		base_class_type="message_transport::SubscriberPlugin<std_msgs::String>">
    <description>
      This is the default pass-through subscriber for topics of type PointCloud
    </description>
  </class>


  <class name="string_transport/udpmulti_pub_str" 
		type="udpmulti_transport::UDPMultiPublisher<std_msgs::String>" 
		base_class_type="message_transport::PublisherPlugin<std_msgs::String>">
    <description>
        This publisher published this point cloud as UDP multicast telegram. 
        Size is limited to 8092 bytes
    </description>
  </class>

  <class name="string_transport/udpmulti_sub_str" 
		type="udpmulti_transport::UDPMultiSubscriber<std_msgs::String>" 
		base_class_type="message_transport::SubscriberPlugin<std_msgs::String>">
    <description>
        This subscriber subscribes to point cloud UDP multicast telegrams. 
    </description>
  </class>

  <class name="string_transport/bz2_pub_str" 
		type="bz2_transport::BZ2Publisher<std_msgs::String>" 
		base_class_type="message_transport::PublisherPlugin<std_msgs::String>">
    <description>
        This publisher published this point cloud as BZ2 compressed binary
        blobs
    </description>
  </class>

  <class name="string_transport/bz2_sub_str" 
		type="bz2_transport::BZ2Subscriber<std_msgs::String>" 
		base_class_type="message_transport::SubscriberPlugin<std_msgs::String>">
    <description>
        This subscriber subscribes to point cloud BZ2 binary blobs
    </description>
  </class>

</library>
